#### Notes from book ./OpenGL Tutorials/learnopengl_book.pdf ####

- p28 s4.1: Make sure you have OpenGL versions 3.3 or higher installed on your system/hardware otherwise
the application will crash or display undefined behavior.

- p33 s5: There is a difference between a 2D coordinate and a pixel. A 2D coordinate is a very precise
representation of where a point is in 2D space, while a 2D pixel is an approximation of that point
limited by the resolution of your screen/window

- p34 s5: In order for OpenGL to know what to make of your collection of coordinates and color values
OpenGL requires you to hint what kind of render types you want to form with the data. Do we
want the data rendered as a collection of points, a collection of triangles or perhaps just one long
line? Those hints are called primitives and are given to OpenGL while calling any of the drawing
commands. Some of these hints are GL_POINTS, GL_TRIANGLES and GL_LINE_STRIP.


- p34 s5: The output of the geometry shader is then passed on to the rasterization stage where it maps the resulting
primitive(s) to the corresponding pixels on the final screen, resulting in fragments for the fragment shader
to use. Before the fragment shaders runs, clipping is performed. Clipping discards all fragments that are
outside your view, increasing performance.

- p34 s5: A fragment in OpenGL is all the data required for OpenGL to render a single pixel.
